name: Publish to PyPI

on:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Enable Universe & switch to official Ubuntu mirror
      run: |
        sudo add-apt-repository -y universe
        sudo sed -i 's|http://azure.archive.ubuntu.com/ubuntu|http://archive.ubuntu.com/ubuntu|g' /etc/apt/sources.list
        sudo apt-get update
        
        # Verify Universe is active and libta-lib-dev is available
        echo "Checking if libta-lib-dev is available in repositories:"
        apt-cache policy libta-lib-dev
    
    - name: Install TA-Lib system library
      run: |
        # Install the package
        sudo apt-get install -y libta-lib-dev
        
        # Check which file was actually installed (underscore or dash)
        echo "Checking installed library files:"
        ls -la /usr/lib/libta*lib*
        
        # Create symlinks if needed (package might install as libta_lib.so)
        if [ -f "/usr/lib/libta_lib.so" ] && [ ! -f "/usr/lib/libta-lib.so" ]; then
          echo "Creating symlinks from libta_lib.so to libta-lib.so"
          sudo ln -sf /usr/lib/libta_lib.so /usr/lib/libta-lib.so
          sudo ln -sf /usr/lib/libta_lib.so.0 /usr/lib/libta-lib.so.0
          sudo ldconfig
        fi
        
        # Verify C library exported symbols (using the name expected by Python wrapper)
        echo "Verifying exported symbols in libta-lib.so:"
        if [ -f "/usr/lib/libta-lib.so" ]; then
          nm -D /usr/lib/libta-lib.so | grep TA_AVGDEV_Lookback
          echo "✓ TA_AVGDEV_Lookback symbol is present in libta-lib.so"
        elif [ -f "/usr/lib/libta_lib.so" ]; then
          nm -D /usr/lib/libta_lib.so | grep TA_AVGDEV_Lookback
          echo "✓ TA_AVGDEV_Lookback symbol is present in libta_lib.so"
        else
          echo "ERROR: Neither libta-lib.so nor libta_lib.so found!"
          exit 1
        fi
        
        # Verify the library is properly installed and registered
        echo "Checking TA-Lib library in system cache:"
        ldconfig -p | grep libta
        ls -la /usr/lib/libta*lib*
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install setuptools wheel twine build
        python -m pip install numpy
        python -m pip install TA-Lib
        
        # Install dependencies
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        fi
    
    - name: Verify TA-Lib installation
      run: |
        python - << 'EOF'
        import os, ctypes, talib
        print("Platform:", os.uname().sysname)
        for lib in ('libta-lib.so','libta_lib.so'):
            try:
                ctypes.CDLL(lib)
                print(f"Loaded {lib}")
                break
            except OSError:
                continue
        else:
            raise RuntimeError("Could not load any TA-Lib shared library")
        # Verify symbol and wrapper
        if 'AVGDEV' not in ''.join(talib.get_functions()):
            raise RuntimeError("TA-AVGDEV symbol missing")
        print("ta-lib wrapper OK:", talib.get_functions()[:3])
        
        # Test a simple function call
        import numpy as np
        close = np.random.random(100)
        output = talib.SMA(close)
        print(f"SMA calculation successful: {output.shape}")
        EOF
    
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python -m build
        twine upload dist/* 