name: Python Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Main test job using Ubuntu container (no need for Debian since we don't need TA-Lib anymore)
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    # Cache pip packages
    - name: Get pip cache directory
      id: pip-cache
      run: |
        echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT
      
    - name: Set up pip cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
      
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install wheel setuptools pytest pytest-cov flake8 black mypy
        
        # Install other dependencies
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        fi
        
        # Install package in development mode
        pip install -e .
        
        # Explicitly install pandas-ta
        pip install pandas-ta>=0.3.0b0
    
    - name: Verify pandas-ta installation
      run: |
        python scripts/verify_pandas_ta.py
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics
    
    - name: Check formatting with black
      run: |
        black --check --diff .
    
    - name: Type check with mypy
      run: |
        mypy --ignore-missing-imports .
    
    - name: Test with pytest
      run: |
        # Run tests with coverage
        pytest --cov=auto_vertical_spread_trader --cov-report=xml --cov-report=term --cov-fail-under=80

  # macOS build - simpler now without TA-Lib
  macos-build:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    # Cache pip packages
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/Library/Caches/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        
        # Install test dependencies and package
        pip install pytest
        pip install -r requirements.txt
        pip install -e .
        
        # Explicitly install pandas-ta
        pip install pandas-ta>=0.3.0b0
    
    - name: Verify pandas-ta installation
      run: |
        python scripts/verify_pandas_ta.py
    
    - name: Run tests
      run: |
        pytest

  # Windows build - simpler now without TA-Lib
  windows-build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    # Cache pip packages
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install Python dependencies
      shell: pwsh
      run: |
        pip install pytest
        if (Test-Path -Path "requirements.txt") {
          pip install -r requirements.txt
        }
        pip install -e .
        
        # Explicitly install pandas-ta
        pip install pandas-ta>=0.3.0b0
    
    - name: Verify pandas-ta installation
      shell: pwsh
      run: |
        python scripts/verify_pandas_ta.py
    
    - name: Run tests
      shell: pwsh
      run: |
        pytest 